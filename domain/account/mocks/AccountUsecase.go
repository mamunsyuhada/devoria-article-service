// Code generated by mockery v2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"

	account "github.com/sangianpatrick/devoria-article-service/domain/account"

	mock "github.com/stretchr/testify/mock"

	response "github.com/sangianpatrick/devoria-article-service/response"
)

// AccountUsecase is an autogenerated mock type for the AccountUsecase type
type AccountUsecase struct {
	mock.Mock
}

// GetProfile provides a mock function with given fields: ctx
func (_m *AccountUsecase) GetProfile(ctx context.Context) response.Response {
	ret := _m.Called(ctx)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context) response.Response); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// Login provides a mock function with given fields: ctx, params
func (_m *AccountUsecase) Login(ctx context.Context, params account.AccountAuthenticationRequest) response.Response {
	ret := _m.Called(ctx, params)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context, account.AccountAuthenticationRequest) response.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}

// Register provides a mock function with given fields: ctx, params
func (_m *AccountUsecase) Register(ctx context.Context, params account.AccountRegistrationRequest) response.Response {
	ret := _m.Called(ctx, params)

	var r0 response.Response
	if rf, ok := ret.Get(0).(func(context.Context, account.AccountRegistrationRequest) response.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(response.Response)
		}
	}

	return r0
}
